rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // # HOST USER DOCUMENTS

    match /users/{userId} {
      // Allow users to read their own data
      allow read: if request.auth.uid == userId;

      // Allow creating their own profile
      allow create: if request.auth.uid == userId;

      // Only allow updating allowed fields
      allow update: if request.auth.uid == userId
        && request.resource.data.diff(resource.data).affectedKeys().hasOnly([
          'profile.name',
          'profile.email'
        ]);

      // System-managed fields must not be changed by client
      // Prevent delete from client
      allow delete: if false;

      // ## EVENTS CREATED BY HOST

      match /events/{eventId} {
        // Hosts can read/write
        allow read, write: if request.auth.uid == userId;

        // Guests can read public event info
        allow get: if request.auth == null || request.auth.uid != userId;

        // ### CHALLENGE PHOTOS

        match /challenge-photos/{challengePhotoId} {
          // Guests can upload and read
          allow create, read: if true;

          // Nobody is allowed to update
          allow update: if false;

          // Only the host can delete uploads
          allow delete: if request.auth.uid == userId;
        }
      }

      // =========================
      // PURCHASES (e.g. Stripe receipts or packages)
      // =========================
      match /purchases/{purchaseId} {
        // Host can read their own purchase entries
        allow read: if request.auth.uid == userId;
      }
    }

    // =========================
    // PUBLIC PACKAGES (read-only)
    // =========================
    match /packages/{packageId} {
      allow read: if resource.data.availableToUsers == true;
      allow write: if false;
    }

  }
}